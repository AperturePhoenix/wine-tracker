/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ReadWinesImport } from './routes/read-wines'
import { Route as CreateWineImport } from './routes/create-wine'
import { Route as CreateReviewImport } from './routes/create-review'

// Create Virtual Routes

const RegisterLazyImport = createFileRoute('/register')()
const LoginLazyImport = createFileRoute('/login')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RegisterLazyRoute = RegisterLazyImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/register.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ReadWinesRoute = ReadWinesImport.update({
  path: '/read-wines',
  getParentRoute: () => rootRoute,
} as any)

const CreateWineRoute = CreateWineImport.update({
  path: '/create-wine',
  getParentRoute: () => rootRoute,
} as any)

const CreateReviewRoute = CreateReviewImport.update({
  path: '/create-review',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/create-review': {
      id: '/create-review'
      path: '/create-review'
      fullPath: '/create-review'
      preLoaderRoute: typeof CreateReviewImport
      parentRoute: typeof rootRoute
    }
    '/create-wine': {
      id: '/create-wine'
      path: '/create-wine'
      fullPath: '/create-wine'
      preLoaderRoute: typeof CreateWineImport
      parentRoute: typeof rootRoute
    }
    '/read-wines': {
      id: '/read-wines'
      path: '/read-wines'
      fullPath: '/read-wines'
      preLoaderRoute: typeof ReadWinesImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  CreateReviewRoute,
  CreateWineRoute,
  ReadWinesRoute,
  LoginLazyRoute,
  RegisterLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/create-review",
        "/create-wine",
        "/read-wines",
        "/login",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/create-review": {
      "filePath": "create-review.tsx"
    },
    "/create-wine": {
      "filePath": "create-wine.tsx"
    },
    "/read-wines": {
      "filePath": "read-wines.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/register": {
      "filePath": "register.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
